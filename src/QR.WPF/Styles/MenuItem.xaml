<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MenuItemBase" TargetType="{x:Type MenuItem}">
        <!--  MenuItem文字颜色和menu的文字颜色一样  -->
        <Setter Property="Foreground" Value="{DynamicResource MenuItemForegrond}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    x:Name="Col0"
                                    Width="Auto"
                                    MinWidth="17"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3" Width="14" />
                            </Grid.ColumnDefinitions>

                            <!--  ContentPresenter to show an Icon if needed  -->
                            <ContentPresenter
                                x:Name="Icon"
                                Grid.Column="0"
                                Margin="4,0,6,0"
                                VerticalAlignment="Center"
                                ContentSource="Icon" />

                            <!--  Glyph is a checkmark if needed for a checkable menu  -->
                            <Grid
                                x:Name="GlyphPanel"
                                Grid.Column="0"
                                Margin="4,0,6,0"
                                VerticalAlignment="Center"
                                Visibility="Hidden">
                                <Path
                                    x:Name="GlyphPanelpath"
                                    VerticalAlignment="Center"
                                    Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                    Fill="{DynamicResource MenuItemForegrond}"
                                    FlowDirection="LeftToRight" />
                            </Grid>

                            <!--  Content for the menu text etc  -->
                            <ContentPresenter
                                x:Name="HeaderHost"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />

                            <!--  Content for the menu IGT  -->
                            <ContentPresenter
                                x:Name="IGTHost"
                                Grid.Column="2"
                                Margin="8,1,8,1"
                                VerticalAlignment="Center"
                                ContentSource="InputGestureText" />

                            <!--  Arrow drawn path which points to the next level of the menu  -->
                            <Grid
                                x:Name="ArrowPanel"
                                Grid.Column="3"
                                Margin="4,0,6,0"
                                VerticalAlignment="Center">
                                <Path
                                    x:Name="ArrowPanelPath"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Data="M0,0 L0,8 L4,4 z"
                                    Fill="{DynamicResource MenuItemForegrond}" />
                            </Grid>

                            <!--
                                The Popup is the body of the menu which expands
                                down or across depending on the level of the item
                            -->
                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="True"
                                Focusable="false"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Padding="2"
                                    Background="{DynamicResource MenuPanelBackground}"
                                    BorderBrush="{DynamicResource MenuPanelBorderColor}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <!--
                        These triggers re-configure the four arrangements
                        of MenuItem to show different levels of menu via Role
                    -->
                    <ControlTemplate.Triggers>
                        <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,5" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="FontSize" Value="12" />

                            <!--  只有这样设置呼出的时候才对其  -->
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="-1" />

                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,5" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="FontSize" Value="12" />

                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Role = 有子控件的子控件  -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Margin" Value="0,0" />
                            <Setter Property="Padding" Value="16,3" />

                            <Setter Property="FontSize" Value="12" />

                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Right" />
                            <Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="3" />

                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Background" Value="{DynamicResource MenuPanelBackground}" />

                        </Trigger>

                        <!--  Role = 没有子控件的子控件  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Margin" Value="0,0" />
                            <Setter Property="Padding" Value="16,3" />

                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Background" Value="{DynamicResource MenuPanelBackground}" />

                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                        <!--  If no Icon is present the we collapse the Icon Content  -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  The GlyphPanel contains the CheckMark  -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Using the system colors for the Menu Highlight and IsEnabled  -->

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HightLightBorder}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HightLightColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource MenuItemForegrond}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>


                        <Trigger Property="IsSubmenuOpen" Value="True">


                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuPanelBackground}" />
                            <Setter TargetName="SubMenu" Property="Background" Value="{DynamicResource MenuPanelBackground}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuPanelBorderColor}" />
                        </Trigger>




                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  只对子项有要求  -->
    <Style x:Key="BlankMenuItemBase" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource MenuItemForegrond}" />
        <Setter Property="Background" Value="{DynamicResource MenuItemBackgrond}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="Auto">

                            <ContentPresenter
                                x:Name="HeaderHost"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />


                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="True"
                                Focusable="false"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Padding="2"
                                    Background="{DynamicResource MenuPanelBackground}"
                                    BorderBrush="{DynamicResource MenuPanelBorderColor}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>
                        <!--  Role = 主Menu下的次级MenuItem  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Margin" Value="2" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Background" Value="{DynamicResource MenuPanelBackground}" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>


                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HightLightBorder}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HightLightColor}" />

                            <Setter Property="Foreground" Value="{DynamicResource MenuItemForegrond}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PureMenuItemBase" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="Auto">

                            <ContentPresenter
                                x:Name="HeaderHost"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />


                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="True"
                                Focusable="false"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Padding="2"
                                    Background="{DynamicResource RegionBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>
                        <!--  Role = 主Menu下的次级MenuItem  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Margin" Value="2" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>


                        <Trigger Property="IsHighlighted" Value="true" />

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>